@model IEnumerable<TypicalTools.Models.Comment>
@using Microsoft.AspNetCore.Http;

@{
    ViewData["Title"] = "CommentList";
    int productCode = int.Parse(@Context.Request.RouteValues["id"].ToString());
    
    // retrieve the Authentication status from the session
    string authStatus = Context.Session.GetString("Authenticated");
        string adminStatus = Context.Session.GetString("Role");
    
    // use a flag to indicate whether or not the user is logged in
    bool loggedIn = !String.IsNullOrEmpty(authStatus) && authStatus.Equals("True");

        bool isAdmin =  Context.User != null && Context.User.IsInRole("Admin");
}


    <h1>Comments for Product code: @productCode</h1>




<p>
    @Html.ActionLink("Add a new Comment", "AddComment","Comment", new {productCode = @productCode})
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.text)
            </th>
            <th>@Html.DisplayNameFor(model => model.created_date)</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                @Html.HiddenFor(modelItem => item.id)
                @Html.HiddenFor(modelItem => item.session_id)
                @Html.HiddenFor(modelItem => item.product_id)
                <td>
                    @Html.DisplayFor(modelItem => item.text)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.created_date)
                </td>
                <td>
                    @if (Context.Session.Id == item.session_id || isAdmin)
                    {
                        @Html.ActionLink("Edit", "EditComment", new {  commentId=item.id  }, new {@class="btn btn-primary ml-1"})
                        @Html.ActionLink("Delete", "RemoveComment", new { commentId = item.id }, new {@class="btn btn-danger ml-1"})
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
